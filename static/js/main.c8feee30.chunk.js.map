{"version":3,"sources":["assets/img/asteroids.jpg","theme.js","components/basic/Heading.js","components/Hero.js","components/layout/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colors","Header","styled","h1","Text","span","props","letterSpaced","Heading","children","header","StyledHero","div","background","Hero","StyledSection","section","Section","Body","Main","main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,uC,+KCA9BC,EAIO,cAJPA,EAMS,YANTA,EAUG,U,+MCPhB,IAAMC,EAASC,IAAOC,GAAV,KAENC,EAAOF,IAAOG,KAAV,KAGJ,SAAAC,GAAK,OAAIA,EAAMC,cAAiB,6BAavBC,EARC,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,SAAUF,EAAkB,EAAlBA,aACxB,OACI,kBAACN,EAAD,KACI,kBAACG,EAAD,CAAMG,aAAcA,GAAeE,K,qdCVhCP,IAAOQ,OAAV,KAAZ,IAGMC,EAAaT,IAAOU,IAAV,IAKSZ,EACAA,EACjBa,KAiBOC,EATF,WAET,OACI,kBAACH,EAAD,KACI,kBAAC,EAAD,CAASJ,cAAY,GAArB,qB,sGCzBZ,IAAMQ,EAAgBb,IAAOc,QAAV,KAWJC,EANC,SAAC,GAAgB,IAAfR,EAAc,EAAdA,SACd,OACI,kBAACM,EAAD,KAAgBN,I,qaCHxB,IAAMS,EAAOhB,IAAOU,IAAV,IAKcZ,GAIlBC,EAASC,IAAOQ,OAAV,KACNS,EAAOjB,IAAOkB,KAAV,KA8DKC,EAvDH,WACR,OACI,kBAACH,EAAD,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,OAEJ,kBAACC,EAAD,KACI,kBAAC,EAAD,KACI,wCACA,oIAEA,gSAIA,qIAGJ,kBAAC,EAAD,KACI,sCACA,+GACA,oLAEA,4BACI,oCACA,mCACA,kCACA,qCACA,sCACA,qCAGR,kBAAC,EAAD,KACI,wCACA,8CACA,4BACI,0CAGA,8CAGA,2DAKR,kBAAC,EAAD,KACI,2CC5DAG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c8feee30.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/asteroids.f3484a02.jpg\";","export const Colors = {\n    primary: \"#5575c5\",\n    primaryRGB:\"85, 117, 197\",\n    primaryDark: \"#173879\",\n    primaryDarkRGB: \"23, 56, 121\",\n    primaryDarker: \"#061229\",\n    primaryDarkerRGB: \"6, 18, 41\",\n    primaryLight: \"#cfe6fd\",\n    primaryLightRGB:\"207, 230, 253\",\n\n    background: \"#03091c\",\n\n    secondary: \"#556cd6\",\n    white: \"white\",\n    coolGrey: \"#edecea\",\n    grey: \"#bebebe\",\n    darkGrey: \"#75787b\",\n    otherGrey: \"#373935\",\n    black: \"#3d3935\",\n}","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Header = styled.h1``\n\nconst Text = styled.span`\n    font-size: 2rem;\n    font-weight: 700;\n    ${props => props.letterSpaced &&  \"letter-spacing: 1.7rem;\"};\n    \n`\n\n\nconst Heading = ({children, letterSpaced}) => {\n    return (\n        <Header>\n            <Text letterSpaced={letterSpaced}>{children}</Text>\n        </Header>\n    )\n}\n\nexport default Heading","import React from 'react';\nimport styled from \"styled-components\";\nimport Heading from \"./basic/Heading\";\nimport {Colors} from \"../theme\";\nimport background from \"../assets/img/asteroids.jpg\";\n\nconst Header = styled.header`\n\n`\nconst StyledHero = styled.div`\n  height: 100vh;\n  display: flex;\n  background-image: linear-gradient(\n                  to right bottom,\n                  rgba(${Colors.primaryDarkRGB}, 0.8),\n                  rgba(${Colors.primaryDarkerRGB}, 0.8)),\n  url(${background});\n  background-attachment: fixed;\n  background-position: center;\n  position: relative;\n  background-size: auto;\n`\n\n\nconst Hero = () => {\n\n    return (\n        <StyledHero>\n            <Heading letterSpaced>Best title ever</Heading>\n        </StyledHero>\n    )\n}\n\nexport default Hero","import React from 'react';\nimport styled from \"styled-components\";\n\nconst StyledSection = styled.section`\ndisplay: block;\nwidth: 100%;\n`\n\nconst Section = ({children}) => {\n    return (\n        <StyledSection>{children}</StyledSection>\n    )\n}\n\nexport default Section","import React from 'react';\nimport styled from \"styled-components\";\nimport {Colors} from \"./theme\";\nimport './App.css';\nimport Hero from \"./components/Hero\";\nimport Section from \"./components/layout/Section\";\n\nconst Body = styled.div`\n    padding: 0;\n    margin: 0;\n    display: flex;\n    flex-direction: column;\n    background-color: ${Colors.background};\n    color: whitesmoke;\n`\n\nconst Header = styled.header``\nconst Main = styled.main`\n    display: flex; \n    flex-direction: column;\n    padding: 3rem;\n    \n`\n\nconst App = () => {\n    return (\n        <Body>\n            <Header>\n                <Hero/>\n            </Header>\n            <Main>\n                <Section>\n                    <h2>About me</h2>\n                    <p>Professionally connected with the web development industry and information technology for many\n                        years.</p>\n                    <p>Well-organised person, problem solver, independent employee with high attention to detail. Fan of\n                        MMA, outdoor activities, TV series and, recently, English literature. A family person, father of\n                        two\n                        fractious boys, therefore remote employment is preferred..</p>\n                    <p>Professionally connected with the web development industry and information technology for many\n                        years.</p>\n                </Section>\n                <Section>\n                    <h2>Skills</h2>\n                    <p>The main area of my expertise is front end development (client side of the web).</p>\n                    <p>HTML, CSS, JS (TypeScript), building small and medium web apps with Angular 2+, custom plugins,\n                        features, animations, and coding interactive layouts.</p>\n                    <ul>\n                        <li>HTML</li>\n                        <li>CSS</li>\n                        <li>JS</li>\n                        <li>React</li>\n                        <li>Python</li>\n                        <li>Git</li>\n                    </ul>\n                </Section>\n                <Section>\n                    <h2>Showcase</h2>\n                    <h2>I've worked on</h2>\n                    <ul>\n                        <li>\n                            Sweepsouth\n                        </li>\n                        <li>\n                            DoubleExposure\n                        </li>\n                        <li>\n                            Porfolio Site Placeholder\n                        </li>\n                    </ul>\n                </Section>\n                <Section>\n                    <h2>Contact</h2>\n                </Section>\n            </Main>\n        </Body>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}